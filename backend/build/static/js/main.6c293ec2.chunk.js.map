{"version":3,"sources":["logo.svg","Components/Sign-up.jsx","ActionCreators/actions.js","Components/Log-in.jsx","Components/home.jsx","Components/explore.jsx","Components/user-profile.jsx","Components/add-post.jsx","Components/search.jsx","Components/navbar.jsx","App.js","serviceWorker.js","Reducers/authReducer.js","Redux/state.js","index.js"],"names":["module","exports","Signup","state","username","firstname","lastname","age","email","password","mobile","message","handleChange","e","setState","target","name","value","submit","console","log","address","props","userList","length","newUser","user_name","first_name","last_name","axios","post","then","res","data","catch","error","i","preventDefault","form","className","type","onChange","this","aria-describedby","required","id","onClick","style","marginLeft","React","Component","connect","auth","users","dispatch","sendUsers","method","url","payload","setLogInStatus","following","setLogOutStatus","Login","usernames","passwords","logout","nameR","passwordR","renderLogIn","selectForLogIn","loggedInStatus","height","isLoggedIn","bindActionCreators","Home","comment","selectComment","postID","comments","commentMessage","handleCommentChange","postComment","newItem","currentUser","post_id","forceUpdate","showComments","variable","getPostsOfID","index","currentid","get","map","obj","push","renderHome","orderHistory","text","pos","inde","key","user","finalComments","element","currentID","Explore","follow","currentFollowing","put","currentUserID","includes","renderUsers","loggedInUser","UserProfile","AddPost","user_id","Search","search","handleSearchQuery","onSubmit","result","placeholder","Navbar","to","path","App","Boolean","window","location","hostname","match","authState","rootReducers","combineReducers","action","stateCopy","JSON","parse","stringify","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c293ec2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux'\r\n\r\nclass Signup extends React.Component {\r\n    state = {\r\n        username: \"\",\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        age: null,\r\n        email: \"\",\r\n        password: \"\",\r\n        mobile: \"\",\r\n        message: \"Click here to sign up!\"\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    submit = (e) => {\r\n        console.log(\"submittttttttt\")\r\n        if (this.state.username == \"\" || this.state.firstname == \"\" || this.state.lastname == \"\" || this.state.age == \"\" || this.state.email == \"\" || this.state.password == \"\" || this.state.mobile == \"\" || this.state.address == \"\" ) {\r\n            this.setState({\r\n                message: \"Please fill all the inputs\"\r\n            })\r\n        } else {\r\n            if (this.props.userList.length === 0) {\r\n                this.setState({\r\n                    message: \"Your profile has been successfully created!\"\r\n                })\r\n                \r\n                let newUser = {\r\n                    user_name: this.state.username,\r\n                    first_name: this.state.firstname,\r\n                    last_name: this.state.lastname,\r\n                    email: this.state.email,\r\n                    password: this.state.password,\r\n                    mobile: this.state.mobile,\r\n                    age: this.state.age,\r\n                    address: this.state.address\r\n                }\r\n    \r\n                axios.post(`http://localhost:3020/user`, newUser)\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        console.log(res.data);\r\n                    }).catch(error => {\r\n                        console.log(error)\r\n                    })\r\n\r\n            } else {\r\n                for (var i = 0; i < this.props.userList.length; i++) {\r\n                    if (this.props.userList[i].user_name === this.state.username) {\r\n                        e.preventDefault()\r\n                        console.log(\"username not unique\")\r\n                        this.setState({\r\n                            message: \"Sorry! This username already exists.\"\r\n                        })\r\n                        break\r\n                    }\r\n                    \r\n                    if (this.props.userList[i].email === this.state.email) {\r\n                        e.preventDefault()\r\n                        console.log(\"email not unique\")\r\n                        this.setState({\r\n                            message: \"Sorry! This email already exists.\"\r\n                        })\r\n                        break\r\n                    }\r\n    \r\n                    if (this.props.userList[i].mobile === this.state.mobile) {\r\n                        e.preventDefault()\r\n                        console.log(\"mobile not unique\")\r\n                        this.setState({\r\n                            message: \"Sorry! This contact number already exists.\"\r\n                        })\r\n                        break\r\n                    }\r\n    \r\n                    console.log(\"creating new user ...\")\r\n\r\n                    this.setState({\r\n                        message: \"Your profile has been successfully created!\"\r\n                    })\r\n\r\n                    let newUser = {\r\n                        user_name: this.state.username,\r\n                        first_name: this.state.firstname,\r\n                        last_name: this.state.lastname,\r\n                        email: this.state.email,\r\n                        password: this.state.password,\r\n                        mobile: this.state.mobile,\r\n                        age: this.state.age,\r\n                        address: this.state.address\r\n                    }\r\n    \r\n                    axios.post(`http://localhost:3020/user`, newUser)\r\n                        .then(res => {\r\n                            console.log(res);\r\n                            console.log(res.data);\r\n                        }).catch(error => {\r\n                            console.log(error)\r\n                        })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let form = (\r\n            <form className=\"user-form\">\r\n                <div className=\"form-group\">\r\n                    <label>Enter Username</label>\r\n                    <input type=\"text\" onChange={(e) => { this.handleChange(e) }} className=\"form-control\" value={this.state.username} name=\"username\" aria-describedby=\"emailHelp\" required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Enter Firstname</label>\r\n                    <input type=\"text\" onChange={(e) => { this.handleChange(e) }} className=\"form-control\" value={this.state.firstname} name=\"firstname\" aria-describedby=\"emailHelp\" required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Enter Lastname</label>\r\n                    <input type=\"text\" onChange={(e) => { this.handleChange(e) }} className=\"form-control\" value={this.state.lastname} name=\"lastname\" aria-describedby=\"emailHelp\" required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Enter Age</label>\r\n                    <input type=\"integer\" onChange={(e) => { this.handleChange(e) }} className=\"form-control\" value={this.state.age} name=\"age\" aria-describedby=\"emailHelp\" required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Email address</label>\r\n                    <input type=\"email\" onChange={(e) => { this.handleChange(e) }} className=\"form-control\" value={this.state.email} name=\"email\" aria-describedby=\"emailHelp\" required />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label >Password</label>\r\n                    <input type=\"password\" onChange={(e) => { this.handleChange(e) }} value={this.state.password} name=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Enter Mobile Number</label>\r\n                    <input type=\"text\" onChange={(e) => { this.handleChange(e) }} className=\"form-control\" value={this.state.mobile} name=\"mobile\" aria-describedby=\"emailHelp\" required />\r\n                </div>\r\n                {/* <div className=\"form-group\">\r\n                    <label>Address</label>\r\n                    <input type=\"text\" onChange={(e) => { this.handleChange(e) }} className=\"form-control\" value={this.state.address} name=\"address\" aria-describedby=\"emailHelp\" required/>\r\n                </div> */}\r\n                <button onClick={(e) => { this.submit(e) }} type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n        )\r\n\r\n        let message = <p style={{marginLeft:\"350px\"}}>{this.state.message}</p>\r\n\r\n\r\n        console.log(\"Current User: \", this.state)\r\n        console.log(\"Signup Props ===> \", this.props.userList)\r\n        return (\r\n            <div>\r\n                {form}\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// export default Signup;\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userList: state.auth.users\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // createNewUser: dispatch\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup)","import axios from 'axios'\r\n\r\nexport function sendUsers() {\r\n    let users = axios({\r\n        method: \"get\",\r\n        url: \"http://localhost:3020/user\"\r\n    })\r\n    return (dispatch) => {\r\n        users.then(res => {\r\n            console.log(\"Axios Response\", res)\r\n            dispatch({\r\n                type: \"all_current_users\",\r\n                payload: res.data\r\n            })\r\n        }).catch(error => {\r\n            console.log(\"Axios Error\", error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function setLogInStatus(name, id, following) {\r\n    console.log(\"before logging in \", following)\r\n    return {\r\n        type: \"login_status\",\r\n        payload: {\r\n            name: name,\r\n            id: id,\r\n            following: following\r\n        }\r\n    }\r\n}\r\n\r\nexport function setLogOutStatus() {\r\n    return {\r\n        type: \"logout_status\"\r\n    }\r\n}","import React from 'react';\r\n// import { BrowserRouter, Route, Link, Redirect } from \"react-router-dom\";\r\n// import axios from 'axios';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from \"redux\";\r\nimport {setLogInStatus} from './../ActionCreators/actions'\r\nimport {setLogOutStatus} from './../ActionCreators/actions'\r\n\r\nclass Login extends React.Component {\r\n\r\n    state = {\r\n        username: \"\",\r\n        password: \"\",\r\n        message: \"Click here to Login!\"\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    submit = (e) => {\r\n        e.preventDefault()\r\n        for (let i = 0; i < this.props.usernames.length; i++) {\r\n            if (this.props.usernames[i] === this.state.username) {\r\n                if (this.props.passwords[i] === this.state.password) {\r\n                    console.log(\"logged in\")\r\n                    this.setState({\r\n                        message: \"You have successfully logged in!\"\r\n                    })\r\n                    /* let action = {\r\n                        type: \"login_status\",\r\n                        payload: {\r\n                            name: this.props.userList[i].first_name + \" \" + this.props.userList[i].last_name,\r\n                            id: this.props.userList[i].id\r\n                        }\r\n                    }\r\n                    this.props.setLogInStatus(action) */\r\n                    let payload = {\r\n                        name: this.props.userList[i].first_name + \" \" + this.props.userList[i].last_name,\r\n                        id: this.props.userList[i].id,\r\n                        following: this.props.userList[i].following\r\n                    }\r\n                    this.props.setLogInStatus(payload.name, payload.id, payload.following)\r\n\r\n                    break\r\n                } else {\r\n                    console.log(\"Incorrent password\")\r\n                    this.setState({\r\n                        message: \"Incorrect password, please try again.\"\r\n                    })\r\n                    break\r\n                }\r\n            } else {\r\n                console.log(\"username does not exist\")\r\n                this.setState({\r\n                    message: \"Sorry! This username does not exist\"\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        this.setState({\r\n            username: \"\",\r\n            password: \"\",\r\n            nameR: \"\",\r\n            passwordR: \"\",\r\n            message: \"Click here to Login!\"\r\n        })\r\n        /* let action = {\r\n            type: \"logout_status\"\r\n        }\r\n        this.props.setLogOutStatus(action) */\r\n        this.props.setLogOutStatus()\r\n    }\r\n\r\n    render() {\r\n        console.log(\"Login Props ========> \", this.props)\r\n        console.log(\"Login State ===> \", this.state)\r\n        let renderLogIn\r\n        let selectForLogIn\r\n        if (this.props.loggedInStatus === true) {\r\n            selectForLogIn = (\r\n                <div>\r\n                    Currently logged in as user, please click below to logout!\r\n                </div>\r\n            )\r\n            renderLogIn = (\r\n                <button onClick={() => { this.logout() }} className=\"btn btn-primary\">\r\n                    Logout\r\n                </button>\r\n            )\r\n        } else {\r\n            renderLogIn = (\r\n                <div>\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label>Enter Username</label>\r\n                            <input type=\"text\" onChange={(e) => { this.handleChange(e) }} className=\"form-control\" value={this.state.username} name=\"username\" aria-describedby=\"emailHelp\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label >Password</label>\r\n                            <input type=\"password\" onChange={(e) => { this.handleChange(e) }} value={this.state.password} name=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" />\r\n                        </div>\r\n                        <button onClick={(e) => { this.submit(e) }} type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n                    </form>\r\n                    <p>\r\n                        {this.state.message}\r\n                    </p>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"user-form\" style={{ height: '350px' }}>\r\n                {selectForLogIn}\r\n                {renderLogIn}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// export default Login;\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userList: state.auth.users,\r\n        usernames: state.auth.usernames,\r\n        passwords: state.auth.passwords,\r\n        loggedInStatus: state.auth.isLoggedIn,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    /* return {\r\n        setLogInStatus: dispatch,\r\n        setLogOutStatus: dispatch\r\n    } */\r\n    return bindActionCreators({setLogInStatus, setLogOutStatus}, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n","import React, { Component, useState, useEffect } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport axios from 'axios';\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nconst Comment = ({ id }) => {\r\n    const [currentComments, setCurrentComments] = useState([])\r\n    let response = axios.get(`http://localhost:3020/comment/${id}`)\r\n    // console.log(response)\r\n    response.then(res => {\r\n        console.log(res)\r\n        if (res.data.length !== 0) {\r\n            return (\r\n                <div>\r\n                    {res.data.map(data => {\r\n                        setCurrentComments(currentComments.concat(data.data))\r\n                    })}\r\n                </div>\r\n            )\r\n        }\r\n    }).catch(error => {\r\n        console.log(error)\r\n    })\r\n    return (\r\n        currentComments.map(comm => {\r\n            return <div>\r\n                {comm}\r\n            </div>\r\n        })\r\n    )\r\n}\r\n\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        post: [],\r\n        message: \"Please follow someone\",\r\n        comment: \"\",\r\n        selectComment: null,\r\n        postID: [],\r\n        comments: [],\r\n        commentMessage: \"Click *Show Button* to see comments*\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        let variable = []\r\n        if (this.props.following !== null) {\r\n            let id = this.props.id\r\n            let getPostsOfID = this.props.following\r\n            for (let index = 0; index < getPostsOfID.length; index++) {\r\n                let currentid = getPostsOfID[index]\r\n                axios.get(`http://localhost:3020/post/${currentid}`)\r\n                    .then(res => {\r\n                        const post = res.data;\r\n                        // console.log(\"axios call data\",post)\r\n                        post.map(post => {\r\n                            axios.get(`http://localhost:3020/comment/${post.id}`).then(res => {\r\n                                // console.log(\"Comment of post\", res)\r\n                                if (res.data.length !== 0) {\r\n                                    res.data.map(data => {\r\n                                        // console.log(\"Comment\",post.id,data.data)\r\n\r\n                                        let obj = {\r\n                                            post_id: post.id,\r\n                                            comment: data.data\r\n                                        }\r\n                                        variable.push(obj)\r\n                                    })\r\n                                }\r\n                            })\r\n                        })\r\n                        this.setState({\r\n                            post: [...this.state.post, post]\r\n                        });\r\n                    }).catch(error => {\r\n                        console.log(error)\r\n                    })\r\n            }\r\n        }\r\n        console.log(\"All comments and related post id\", variable)\r\n        this.setState({\r\n            comments: variable\r\n        })\r\n    }\r\n\r\n    handleCommentChange = (comment) => {\r\n        this.setState({\r\n            comment: comment\r\n        })\r\n    }\r\n\r\n    selectComment = (id) => {\r\n        console.log(\"Post ID selected\", id)\r\n        this.setState({\r\n            selectComment: id,\r\n            comment: \"\"\r\n        })\r\n    }\r\n\r\n    postComment = (id) => {\r\n        // console.log(this.state.comment)\r\n        let newItem = {\r\n            data: \"@\" + this.props.currentUser + \"-->\" + this.state.comment,\r\n            post_id: id\r\n        }\r\n        console.log(newItem)\r\n        axios.post(`http://localhost:3020/comment`, newItem)\r\n            .then(res => {\r\n                console.log(res);\r\n                console.log(res.data);\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        this.setState({\r\n            comment: \"\",\r\n            selectComment: null\r\n        })\r\n        this.forceUpdate()\r\n    }\r\n\r\n    /* getCommentsForPost = (id) => {\r\n        axios.get(`http://localhost:3020/comment/${id}`)\r\n            .then(res => {\r\n                const post = res.data;\r\n                // console.log(post)\r\n                return post.map((post, index) => {\r\n                    return <Comment key={index} data={post.data}/>\r\n                })\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n    } */\r\n\r\n    showComments = () => {\r\n        this.forceUpdate()\r\n        if (this.state.comments.length == 0) {\r\n            this.setState({\r\n                commentMessage: \"No comment on any post\"\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"all posts on home page ---> \", this.state.post)\r\n        let renderHome\r\n        let orderHistory\r\n        if (this.state.post.length === 0) {\r\n            orderHistory = (\r\n                <div style={{ height: '450px' }}>\r\n                    <b>{this.state.message}</b>\r\n                </div>\r\n            )\r\n        } else {\r\n            orderHistory = (\r\n                <div className=\"tablePage\">\r\n                    {this.state.post.map((post, index) => {\r\n                        // console.log(\"postttt\",post)\r\n                        return post.map((pos, inde) => {\r\n                            // console.log(\"posss\", pos)\r\n                            return (\r\n                                <div className=\"table\" key={inde}>\r\n                                    Post ID : {pos.id}<br />\r\n                                     @{pos.user.user_name} <br />\r\n                                    {pos.data}<br />\r\n                                     Current Likes :-<br />\r\n                                     Current Comments :-\r\n                                    {(() => {\r\n                                        // console.log(\"HIII\", this.state.comments)\r\n                                        if (this.state.comments.length !== 0) {\r\n                                            console.log(this.state.comments)\r\n                                            let finalComments = []\r\n                                            for (let i = 0; i < this.state.comments.length; i++) {\r\n                                                const element = this.state.comments[i];\r\n                                                // console.log(element, pos.id)\r\n                                                if (element.post_id === pos.id) {\r\n                                                    // console.log(\"comment should come\", element)\r\n                                                    finalComments.push(element.comment)\r\n                                                } \r\n                                            }\r\n                                            if (finalComments.length !== 0) {\r\n                                                console.log(\"final comments for this post\", finalComments)\r\n                                                {return finalComments.map(comment => {\r\n                                                    console.log(\"individual comment\", comment)\r\n                                                    return(\r\n                                                        <div>\r\n                                                            {comment}\r\n                                                        </div>\r\n                                                    )\r\n                                                })}\r\n                                            } else {\r\n                                                return(\r\n                                                    <div>\r\n                                                        This post has no comments\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        } else {\r\n                                            return(\r\n                                            <div>{this.state.commentMessage}</div>\r\n                                            )\r\n                                        }\r\n                                    })()}\r\n                                    {/* <Comment id={pos.id}/> */}\r\n                                    {/* {this.getCommentsForPost(pos.id)} */}\r\n                                    <button onClick={() => { this.selectComment(pos.id) }}>Select to comment!</button>\r\n                                </div>\r\n                            )\r\n                        })\r\n                        /*  return (\r\n                             {<div className=\"table\" key={inde}>\r\n                                     Sr. No. : {inde+1}<br />\r\n                                     {pos.data}<br />\r\n                                     Current Likes:-<br />\r\n                                     Current Comments :-\r\n                                 </div>}\r\n                         ) */\r\n                    })}\r\n                    <br />\r\n                    {this.state.selectComment === null && (\r\n                        <div>Select a post to comment on it!</div>\r\n                    )}\r\n                    {this.state.selectComment !== null && (\r\n                        <div>\r\n                            Currently selected post with ID {this.state.selectComment} <br />\r\n                            Add your comment below and press enter to post Comment <br />\r\n                            <input value={this.state.comment} onChange={(e) => { this.handleCommentChange(e.target.value) }} type=\"text\" /> <br />\r\n                            <button onClick={() => this.postComment(this.state.selectComment)}>Enter</button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )\r\n\r\n        }\r\n        let text\r\n        if (this.state.post.length !== 0) {\r\n            text = (\r\n                <div>\r\n                    <h3>Current posts on your timeline :-</h3>\r\n                    <button onClick={this.showComments}>Show Comments</button>\r\n                </div>\r\n            )\r\n        }\r\n        if (this.props.loggedInStatus === true) {\r\n            renderHome = (\r\n                <div>\r\n                    <b>\r\n                        Hi, @{this.props.currentUser}\r\n                    </b> <br />\r\n                    {text}\r\n                    {orderHistory}\r\n                </div>\r\n            )\r\n        } else {\r\n            renderHome = (\r\n                <div style={{ height: '450px' }}>\r\n                    <b>Please login to continue</b>\r\n                </div>\r\n            )\r\n        }\r\n        console.log(\"final\", this.state.comments)\r\n        return (\r\n            <div style={{ height: 'fit-content' }}>\r\n                {renderHome}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedInStatus: state.auth.isLoggedIn,\r\n        id: state.auth.currentID,\r\n        currentUser: state.auth.currentUser,\r\n        following: state.auth.following\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n    /* return {\r\n        sendUsers: dispatch\r\n    } */\r\n    // return bindActionCreators({sendUsers}, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport axios from 'axios';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { render } from \"react-dom\";\r\n\r\nclass Explore extends Component {\r\n    state = {\r\n        user: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        // let id = this.props.id\r\n        axios.get(`http://localhost:3020/user`)\r\n            .then(res => {\r\n                const user = res.data;\r\n                this.setState({ user });\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    follow = (id) => {\r\n        console.log(id)\r\n        let currentFollowing\r\n        if (this.props.following === null) {\r\n            currentFollowing = []\r\n        } else {\r\n            currentFollowing = this.props.following\r\n        }\r\n        // let currentFollowing = this.props.following\r\n        console.log(currentFollowing)\r\n        axios.put(`http://localhost:3020/user/${this.props.currentUserID}`, {\r\n            following: [...currentFollowing, id]\r\n        }).then(res => {\r\n            // let id = this.props.id\r\n            console.log(\"In response\")\r\n            console.log(res);\r\n            console.log(res.data);\r\n            axios.get(`http://localhost:3020/user`)\r\n                .then(res => {\r\n                    const user = res.data;\r\n                    this.setState({ user });\r\n                }).catch(error => {\r\n                    console.log(error)\r\n                })\r\n            }).catch(error => {\r\n                console.log(\"In error\")\r\n                console.log(error)\r\n            })\r\n    }\r\n    \r\n    following = (id) => {\r\n        let follow\r\n        if (this.props.following === null || this.props.following.length === 0 ) {\r\n            console.log(\"you can now add your first follower\")\r\n            return follow = (\r\n                <button onClick={() => { this.follow(id) }}>Follow</button>\r\n            )\r\n            \r\n        } else if (this.props.following.length !== 0) {\r\n            if (this.props.following.includes(id)) {\r\n                return follow = (<div>You are following this user!</div>)\r\n            } else {\r\n                return follow = (<button onClick={() => { this.follow(id) }}>Follow</button>)\r\n            }\r\n            /* for(let i = 0 ; i < this.props.following.length; i++){\r\n                console.log(\"checking\", id, this.props.following[i])\r\n                if(this.props.following[i] === id) {\r\n                    return follow = (<div>You are following this user!</div>)\r\n                } else {\r\n                    return follow = (<button onClick={() => { this.follow(id) }}>Follow</button>)\r\n                }\r\n            } */\r\n        } else {\r\n            return(\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(\"Current following\",this.props.following)\r\n        /* if (this.props.following === 0 ) {\r\n            following = (\r\n                <button onClick={() => { this.follow(user.id) }}>Follow</button>\r\n            )\r\n        } else {\r\n            if (this.props.following.includes(user.id)) {\r\n                following =(<div>You are following this user!</div>)\r\n            } else {\r\n                following=(<button onClick={() => { this.follow(user.id) }}>Follow</button>)\r\n            }\r\n        } */\r\n        let renderUsers\r\n        if (this.props.loggedInUser === true) {\r\n            renderUsers = (\r\n                <div className=\"tablePage\">\r\n                    {this.state.user.map((user, index) => {\r\n                        if (user.id === this.props.currentUserID) {\r\n                            return(\r\n                                <div className=\"table\" key={index}>\r\n                                    This is your profile! <br />\r\n                                    Name: {user.first_name} {user.last_name} <br/>\r\n                                    Username: @{user.user_name} <br/>\r\n                                    age: {user.age}\r\n                                </div>\r\n                            )\r\n                        } else {\r\n                            return(\r\n                                <div className=\"table\" key={index}>\r\n                                    ID: {user.id} <br/>\r\n                                    Name: {user.first_name} {user.last_name} <br />\r\n                                    Username: @{user.user_name} <br/>\r\n                                    age: {user.age}\r\n                                    {this.following(user.id)}\r\n                                    {/* {this.props.following === null && (\r\n                                        <button onClick={() => { this.follow(user.id) }}>Follow</button>\r\n                                    )}\r\n                                    {(!this.props.following.includes(user.id) && this.props.following !== 0) && (\r\n                                        <button onClick={() => { this.follow(user.id) }}>Follow</button>\r\n                                    )}\r\n                                    {(this.props.following.includes(user.id) && this.props.following !== 0) && (\r\n                                        <div>You are following this user!</div>\r\n                                    )} */}\r\n                                    {/* {(() => {\r\n                                        if (this.props.following !== 0) {\r\n                                            {!this.props.following.includes(user.id) && (\r\n                                                <button onClick={() => {this.follow(user.id)}}>Follow</button>\r\n                                            )}\r\n                                            {this.props.following.includes(user.id) && (\r\n                                                <div>You are following this user!</div>\r\n                                            )}\r\n                                        }\r\n                                    })()} */}\r\n                                    {/* {!this.props.following.includes(user.id) && (\r\n                                        <button onClick={() => {this.follow(user.id)}}>Follow</button>\r\n                                    )}\r\n                                    {this.props.following.includes(user.id) && (\r\n                                        <div>You are following this user!</div>\r\n                                    )} */}\r\n                                </div>\r\n                            )\r\n                        }\r\n                    })}\r\n                </div>\r\n            )\r\n        } else {\r\n            renderUsers = (\r\n                <div>\r\n                    <b>Please login to continue!</b>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n        return(\r\n            <div>\r\n                {renderUsers}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedInUser: state.auth.isLoggedIn,\r\n        currentUserID: state.auth.currentID,\r\n        following: state.auth.following\r\n        // userList: state.auth.users \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    /* return {\r\n        sendUsers: dispatch\r\n    } */\r\n    // return bindActionCreators({sendUsers}, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Explore)","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport axios from 'axios';\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nclass UserProfile extends Component {\r\n    state = {\r\n        post: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        let id = this.props.id\r\n        axios.get(`http://localhost:3020/post/${id}`)\r\n            .then(res => {\r\n                const post = res.data;\r\n                this.setState({ post });\r\n            })\r\n    }\r\n\r\n    /* deleteCurrentItem = (id) => {\r\n        axios.delete(`http://localhost:3020/menu/${id}`)\r\n            .then(res => {\r\n                const menu = res.data;\r\n                console.log(menu)\r\n                // this.setState({ menu });\r\n                axios.get(`http://localhost:3020/menu/${this.props.id}`)\r\n                    .then(res => {\r\n                        const menu = res.data;\r\n                        this.setState({ menu });\r\n                    })\r\n            })\r\n    }\r\n */\r\n    render() {\r\n        let renderHome\r\n        let orderHistory\r\n        if (this.state.post.length === 0) {\r\n            orderHistory = (\r\n                <div style={{height: '450px'}}>\r\n                    <b>You have not added any posts on your timeline!</b>\r\n                </div>\r\n            )\r\n        } else {\r\n            orderHistory = (\r\n                <div className=\"tablePage\">\r\n                    {this.state.post.map((post, index) => {\r\n                        return (\r\n                            <div className=\"table\" key={index}>\r\n                                Sr. No. : {index+1}<br />\r\n                                {post.data}<br />\r\n                                Current Likes:-<br />\r\n                                Current Comments :-\r\n                                {/* <button onClick={()=>{this.deleteCurrentItem(post.id)}}>Delete Item</button> */}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            )\r\n\r\n        }\r\n        let text \r\n        if (this.state.post.length !== 0) {\r\n            text = (\r\n                <h3>Current posts on your timeline :-</h3>\r\n            )\r\n        }\r\n        if (this.props.loggedInStatus === true) {\r\n            renderHome = (\r\n                <div>\r\n                    <b>\r\n                        Hi, @{this.props.currentUser}\r\n                    </b> <br />\r\n                    {text}\r\n                    {orderHistory}\r\n                </div>\r\n            )\r\n        } else {\r\n            renderHome = (\r\n                <div style={{height: '450px'}}>\r\n                    <b>Please login to continue</b>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div style={{height: 'fit-content'}}>\r\n                {renderHome}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedInStatus: state.auth.isLoggedIn,\r\n        id: state.auth.currentID,\r\n        currentUser: state.auth.currentUser\r\n        // userList: state.auth.users \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n\r\n    }\r\n    /* return {\r\n        sendUsers: dispatch\r\n    } */\r\n    // return bindActionCreators({sendUsers}, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile)","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport axios from 'axios';\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nclass AddPost extends Component {\r\n    state = {\r\n        data: \"\",\r\n        message: \"Click here to upload new post!\"\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    submit = (e) => {\r\n        console.log(\"submittttttttt\")\r\n        if (this.state.data == \"\" ) {\r\n            this.setState({\r\n                message: \"Please write something!\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                message: \"This post has been successfully uploaded!\"\r\n            })\r\n\r\n            let newItem = {\r\n                data: this.state.data,\r\n                user_id: this.props.currentUserID\r\n            }\r\n\r\n            axios.post(`http://localhost:3020/post`, newItem)\r\n                .then(res => {\r\n                    console.log(res);\r\n                    console.log(res.data);\r\n                }).catch(error => {\r\n                    console.log(error)\r\n                })\r\n\r\n            this.setState({\r\n                data: \"\",\r\n                message: \"Click here to upload new post!\"\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let form\r\n        if (this.props.isLoggedIn === true) {\r\n            form = (\r\n                <div className=\"user-form\">\r\n                    <div className=\"form-group\">\r\n                        <label>Enter Post Data</label>\r\n                        <input type=\"text\" onChange={(e) => { this.handleChange(e) }} className=\"form-control\" value={this.state.data} name=\"data\" aria-describedby=\"emailHelp\" required />\r\n                    </div>\r\n                    <button onClick={(e) => { this.submit(e) }} type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                    <p>{this.state.message}</p>\r\n                </div>\r\n            )\r\n        } else {\r\n            form = (\r\n                <div style={{height: '450px'}}>\r\n                    <b>Please login to continue</b>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        // console.log(\"Current State: \", this.state)\r\n        // console.log(\"Current Props: \", this.props)\r\n        return (\r\n            <div>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.auth.isLoggedIn,\r\n        currentUserID: state.auth.currentID\r\n        // userList: state.auth.users \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    /* return {\r\n        sendUsers: dispatch\r\n    } */\r\n    // return bindActionCreators({sendUsers}, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPost)","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport axios from 'axios';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { render } from \"react-dom\";\r\n\r\nclass Search extends Component {\r\n    state = {\r\n        user: null,\r\n        search: \"\",\r\n        message: \"Search here\"\r\n    }   \r\n\r\n    handleSearchQuery = (search) => {\r\n        this.setState({\r\n            search: search\r\n        })\r\n    }\r\n\r\n    onSubmit = () => {\r\n        console.log(\"submit clicked\")\r\n        let index = null\r\n        for (let i = 0; i < this.props.usernames.length; i++) {\r\n            if (this.props.usernames[i] == this.state.search) {\r\n                index = i\r\n            }\r\n        }\r\n        if (index === null) {\r\n            console.log(\"Nothing found\")\r\n            this.setState({\r\n                message: \"Sorry! No user found!\"\r\n            })\r\n        } else {\r\n            let id = this.props.users[index].id\r\n            axios.get(`http://localhost:3020/user/${id}`)\r\n                    .then(res => {\r\n                        const user = res.data;\r\n                        // console.log(\"axios call data\", user[0])\r\n                        this.setState({\r\n                            user: user[0],\r\n                            message: \"Found Below results\"\r\n                        })\r\n                    }).catch(error => {\r\n                        console.log(error)\r\n                    })\r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        console.log(\"search page\")\r\n        let renderUsers\r\n        if (this.props.loggedInUser === true) {\r\n            renderUsers = (\r\n                <div>\r\n                    {/* Please enter username and press Search */}\r\n                    <input type=\"text\" value={this.state.search} placeholder=\"Search with username\" onChange={(e) => this.handleSearchQuery(e.target.value)}/>\r\n                    <button onClick={this.onSubmit}>Search</button>\r\n                </div>\r\n            )\r\n        } else {\r\n            renderUsers = (\r\n                <div>\r\n                    <b>Please login to continue!</b>\r\n                </div>\r\n            )\r\n        }\r\n        let result\r\n        if (this.state.message == \"Search here\") {\r\n            result = (\r\n                <div>\r\n                    Please enter your query\r\n                </div>\r\n            )\r\n        } else if(this.state.message == \"Sorry! No user found!\"){\r\n            result = (<div>\r\n                There is no user with this user name!\r\n            </div>)\r\n        } else {\r\n            result = (\r\n                <div>\r\n                    {this.state.user.first_name} <br/>\r\n                    {this.state.user.last_name} <br/>\r\n                    {this.state.user.user_name} <br/>\r\n                    {this.state.user.age} <br/>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n        return(\r\n            <div>\r\n                {renderUsers}\r\n                {this.props.loggedInUser && (\r\n                    result\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedInUser: state.auth.isLoggedIn,\r\n        currentUserID: state.auth.currentID,\r\n        following: state.auth.following,\r\n        users: state.auth.users,\r\n        usernames: state.auth.usernames\r\n        // userList: state.auth.users \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        \r\n    }\r\n    // return bindActionCreators({sendUsers}, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search)","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Link, Redirect } from \"react-router-dom\";\r\nimport SignUp from \"./Sign-up\";\r\nimport Login from \"./Log-in\";\r\n// import axios from 'axios';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from \"redux\";\r\nimport Home from \"./home\";\r\nimport Explore from \"./explore\";\r\nimport UserProfile from \"./user-profile\";\r\nimport AddPost from \"./add-post\";\r\nimport {sendUsers} from './../ActionCreators/actions'\r\nimport Search from \"./search\";\r\n\r\n\r\nclass Navbar extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.sendUsers()    \r\n    }\r\n\r\n    render() {\r\n        console.log(\"Navbar Props ===> \", this.props)\r\n        return (\r\n            <div>\r\n                <div className=\"App-header\">\r\n                    {(() => {\r\n                        if (this.props.loggedInUser === true) {\r\n                            return (\r\n                                <Link to=\"/home\">Home</Link>\r\n                            )\r\n                        }\r\n                    })()}\r\n                    {(() => {\r\n                        if (this.props.loggedInUser === true) {\r\n                            return (\r\n                                <Link to=\"/my-profile\">My Profile</Link>\r\n                            )\r\n                        }\r\n                    })()}\r\n                    {this.props.loggedInUser && (\r\n                        <Link to=\"/add-post\">New Post</Link>\r\n                    )}\r\n                    {(() => {\r\n                        if (this.props.loggedInUser === true) {\r\n                            return (\r\n                                <Link to=\"/explore\">Explore</Link>\r\n                            )\r\n                        }\r\n                    })()}\r\n                    {(() => {\r\n                        if (this.props.loggedInUser === true) {\r\n                            return (\r\n                                <Link to=\"/search\">Search</Link>\r\n                            )\r\n                        }\r\n                    })()}\r\n                   {/*  {this.props.loggedInUser && (\r\n                        <Link to=\"/home\">Home</Link>\r\n                    )} */}\r\n                    {/* <Link to=\"/home\">Home</Link>\r\n                    <Link to=\"/my-profile\">My Profile</Link>\r\n                    <Link to=\"/explore\">Explore</Link> */}\r\n                     {!this.props.loggedInUser && (\r\n                        <Link to=\"/signup\">Sign-Up</Link>\r\n                    )}\r\n                    <Link to=\"/login\">Log-In</Link>\r\n                </div>\r\n                <div>\r\n                    <Route path=\"/signup\">\r\n                        <div>\r\n                            <SignUp />\r\n                        </div>\r\n                    </Route>\r\n                    <Route path=\"/login\">\r\n                        <div>\r\n                            <Login />\r\n                        </div>\r\n                    </Route>\r\n                    <Route path=\"/home\">\r\n                        <div>\r\n                            <Home />\r\n                        </div>\r\n                    </Route>\r\n                    <Route path=\"/my-profile\">\r\n                        <div>\r\n                            <UserProfile />\r\n                        </div>\r\n                    </Route>\r\n                    <Route path=\"/add-post\">\r\n                        <div>\r\n                            <AddPost />\r\n                        </div>\r\n                    </Route>\r\n                    <Route path=\"/explore\">\r\n                        <div>\r\n                            <Explore />\r\n                        </div>\r\n                    </Route>\r\n                    <Route path=\"/search\">\r\n                        <div>\r\n                            <Search />\r\n                        </div>\r\n                    </Route>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// export default Navbar;\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedInUser: state.auth.isLoggedIn,\r\n        userList: state.auth.users \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    /* return {\r\n        sendUsers: dispatch\r\n    } */\r\n    return bindActionCreators({sendUsers}, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar)","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './Components/navbar';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <Navbar />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const authState = {\r\n    isLoggedIn: false,\r\n    users: [],\r\n    usernames: [],\r\n    passwords: [],\r\n    currentUser: \"\",\r\n    currentID: null,\r\n    following: [],\r\n}\r\n\r\nexport function authReducerFunction(state = authState, action) {\r\n    console.log(\"Redux Auth State Here (state.js) =>> \", state, action)\r\n    let stateCopy = JSON.parse(JSON.stringify(state))\r\n\r\n    switch (action.type) {\r\n        case \"login_status\":\r\n            console.log(\"logging in now\", action.payload)\r\n            stateCopy.isLoggedIn = !stateCopy.isLoggedIn\r\n            stateCopy.currentUser = action.payload.name\r\n            stateCopy.currentID = action.payload.id\r\n            console.log(\"payload following\", action.payload.following)\r\n            stateCopy.following = action.payload.following\r\n                // stateCopy.following.push(action.payload.following)\r\n            console.log(\"Current following after just logging in ---> \", stateCopy.following)\r\n            return stateCopy\r\n        case \"logout_status\":\r\n            stateCopy.isLoggedIn = false\r\n            stateCopy.currentID = null\r\n            stateCopy.currentUser = \"\"\r\n            stateCopy.following = []\r\n            return stateCopy\r\n        case \"all_current_users\":\r\n            stateCopy.users = action.payload\r\n            let usernames = []\r\n            let passwords = []\r\n            for (var i = 0; i < action.payload.length; i++) {\r\n                usernames.push(action.payload[i].user_name)\r\n                passwords.push(action.payload[i].password)\r\n            }\r\n            stateCopy.usernames = usernames\r\n            stateCopy.passwords = passwords\r\n            return stateCopy\r\n\r\n            /* default:\r\n                return state */\r\n    }\r\n    return state\r\n}","import { createStore, applyMiddleware } from 'redux'\r\n// import axios from 'axios';\r\nimport { combineReducers } from 'redux'\r\nimport { authReducerFunction } from './../Reducers/authReducer'\r\n// import { videoReducerFunction } from './../Reducers/videoReducer'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst rootReducers = combineReducers({\r\n    auth: authReducerFunction\r\n        // video: videoReducerFunction\r\n})\r\n\r\n// Create Package\r\nconst store = createStore(rootReducers, applyMiddleware(thunk))\r\nexport default store;\r\n// export default rootReducers","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport store from './Redux/state'\nconsole.log(\"from index.js\",store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}